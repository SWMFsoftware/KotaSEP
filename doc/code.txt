
	       STRUCTURE OF  SEP CODE


INPUT(s):      violet.in    (physical & computational parameters)
	       evolv1.cme   (containing plasma and magnetic field 
			     from Chip's simulation)

OUTPUT(s):     allaX.out    (X=1-6, plasma data at given time 
			     serve mainly diagnostic purposes)
               csillaX.out  (X=1-6, SEP simulations at given time  
			     energy spectrum at select locations
			     spatial dependence at select energies)
               timevar.rX   (X=1-4, time-profile of SEP flux for 5 
	                     pre-selected energy channels, 
			     at select locations (X))
               plasma.rX    (X=1-4, same as above for plasma V,B)

	       ujcme-eta     serves only diagnostic - temporary

STRUCTURE:

 Initial block:

    ***********************************************************
    * subroutine:                                             *       
    * ADMIT   :  input, scaling to proper units, etc          *
    * COOL    :  construct log grid in momentum, p,           *
    *            gives energy dependence of scattering, etc.  *
    * PEELOFF :  would remove a pre-defined profile form the  *
    *            energy spectrum -- not used                  *
    * Pangle  :  construct lin grid in mu (cos p-angle)       *
    ***********************************************************

REAL CALCULATION, TIME-EVOLUTION STARTS HERE  

     GRID SLIDED in time-step dt0 = basic time unit
     This subdivided to KFRESH sub-intervals, dt1=dt0/kfresh  each
      - plasma V,B, & inferred transport coeffs refreshed in each 
     (this is the smallest time unit for plasma) 
     - done in subroutine HELIOS
               THIS IS WHERE VALUES FROM CME-SIMULATION SHOUD COME IN !
        
         Substeps are further sub-sub-divided to kacc intervals each
         since particle-accelaration requires small time steps. The
	 time-step for acceleartion block is dtacc = dt1/kacc
	 The whole acceleration/transport block is repeated kacc times

    ***********************************************************
    * subroutine  OPENTIME : opens output <timevar,plasma>    *
    ***********************************************************
  <<<<<<<<<<<<<<<<<<<<<<<  GO BACK HERE AFTER REFRESH  <<<<<<<<<<<<<<<<<<<
       
    *******************************************************************
    *  HELIOS :   calculates current transport parameters             *
    *             NEED INPUT FROM CME                                 *
    *  SIMILE :   temporary solution - take similarity-like solution  *
    *             from one snapshot of Chip's field line              *
    *                                                                 *
    *                                                                 *
    *     Particle Acceleration & Propagation block:                  *
    *       this constitutess one sub-sub-step for particles          *
    *       time-step : dtacc=dt0/kfriss/kacc to be repeated X kacc   *
    *     +++++++++++++++++++++++++++++++++++++++++++++++++++++++     *
    *     + SOURCE :   source - term                            +     *
    *     + DELTAL :   explicit time step in spatial direction  +     *             
    *     + LCYCLE :   implicit time-step in spatial direction  +     *
    *     +              these create increments df(i,j,k)      +     *
    *     + UPDATE :   new value for f(i,j,k)                   +     *
    *     + DELTAMU:   explicit time step in mu direction       +     *          
    *     + MUCYCLE:   implicit time-step in mu direction       +     *
    *     + DELTAP :   explicit time step in p - direction      +     *               
    *     + PCYCLE :   implicit time-step in p - direction      +     *
    *     +              these create increments df(i,j,k)      +     *
    *     + SUBSUB :                                            +     *
    *     + UPDATSUB:                                           +     *
    *     +              these create variable time-steps       +     *
    *     +              - smaller steps near shock             +     *
    *     +              - not yet been really used             +     *
    *     + SOLVE5 :    solver for penta-diagonal lin. equation +     *
    *     + SOLVAA :    solver for lower 3-diagonal eq.         +     *
    *     + SOLVCC :    solver for upper 3-diagonal eq.         +     *
    *     +++++++++++++++++++++++++++++++++++++++++++++++++++++++     *
    *      Repeated kacc times                                        *
    *                                                                 *
    *******************************************************************
     Repeated kfresh times     to perform one basic time step dt0                             


    OUTPUTS at each time step dt0

    *******************************************************************
    *  TIMEVAR:   gives time-evolution of SEP flux at 5 energies      *
    *             at selected radial locations (in TIMEVAR,Rx )       *
    *             + also gives V,N,B & SEP transport quantities at    *
    *             same locatiosn (PLASMA.Rx)                          *
    *******************************************************************

    OUTPUTS at certain time steps (24 step now - changable)

    *******************************************************************
    *  ALLA   :   plasma V,N,B + transport parameters (diagnostc)     *
    *  CSILLA :   SEP energy spectra at 4 select locations            *
    *             + radial dependence for 5 select energies           *
    *             + p-angle distributions at select locations/energies*
    *******************************************************************

 END OF ONE BASIC TIME-STEP 

    *******************************************************************
    *  REFRESH :   slide grid                                         *
    *              DROP outermost point                               *
    *              SHIFT indices i to i+1                             *
    *              ADD (and compute) NEW i=0 location                 *
    *******************************************************************
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  GO BACK TO >>> 

    ***********************************************************
    * subroutine  CLOSETIME : closes output <timevar,plasma>  *
    ***********************************************************

